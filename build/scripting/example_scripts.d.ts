export declare const tutorialProgram = "let operations = [];\nconst colorSet = colorSets[0];\nconst center = new Vec2(this.canvasWidth, this.canvasHeight).scale(0.5);\nfor (let i = 0; i < 21; i++) {\n  \tconst color = colorSet[i % colorSet.length];\n    const operation = new InkDropOperation(center, 200 - 2 * i, color);\n    operations.push(operation);\n}\n\nconst halfWidth = this.canvasWidth / 2;\nconst halfHeight = this.canvasHeight / 2;\n\nconst midLeft = new Vec2(0, this.canvasHeight / 2);\nconst midRight = new Vec2(this.canvasWidth, this.canvasHeight / 2);\n\nconst midUpper = new Vec2(this.canvasWidth / 2, 0);\nconst midLower = new Vec2(this.canvasWidth / 2, this.canvasHeight);\n\nfor (let i = 0; i <= 3; i +=1) {\n let operation = new CircularLineTine(midLeft, i * halfWidth / 3, 1, 0);\n  operations.push(operation);\n  operation = new CircularLineTine(midRight, i * halfWidth / 3, 1, 0);\n  operations.push(operation);\n}\n\nreturn operations;";
export declare const concentricCircles = "let operations = [];\nconst colorSet = colorSets[0];\nconst center = new Vec2(this.canvasWidth, this.canvasHeight).scale(0.5);\nfor (let i = 0; i < 100; i++) {\n  \tconst color = colorSet[i % colorSet.length];\n    const operation = new InkDropOperation(center, 200 - 2 * i, color);\n    operations.push(operation);\n}\nreturn operations;";
